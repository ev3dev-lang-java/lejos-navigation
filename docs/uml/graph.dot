#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6-24-gf6e263 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// lejos.robotics.localization.BeaconLocator
	c0 [label=<<table title="lejos.robotics.localization.BeaconLocator" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> BeaconLocator </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + locate() : ArrayList&lt;Double&gt; </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.localization.BeaconPoseProvider
	c1 [label=<<table title="lejos.robotics.localization.BeaconPoseProvider" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> BeaconPoseProvider </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - bt : BeaconTriangle </td></tr>
<tr><td align="left" balign="left"> - bl : BeaconLocator </td></tr>
<tr><td align="left" balign="left"> - opp : OdometryPoseProvider </td></tr>
<tr><td align="left" balign="left"> - moves : int </td></tr>
<tr><td align="left" balign="left"> - scanInterval : int </td></tr>
<tr><td align="left" balign="left"> - distance : double </td></tr>
<tr><td align="left" balign="left"> - hasScanned : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + BeaconPoseProvider(bl : BeaconLocator, bt : BeaconTriangle, mp : MoveProvider) </td></tr>
<tr><td align="left" balign="left"> + BeaconPoseProvider(bl : BeaconLocator, bt : BeaconTriangle, mp : MoveProvider, scanInterval : int) </td></tr>
<tr><td align="left" balign="left"> - convertToRelative(robotBearing : double, cartesianHeading : double) : double </td></tr>
<tr><td align="left" balign="left"> + getPose() : Pose </td></tr>
<tr><td align="left" balign="left"> - sortBeacons(beacons : ArrayList&lt;Double&gt;, angles : ArrayList&lt;Double&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + getLargestIndex(angles : ArrayList&lt;Double&gt;) : int </td></tr>
<tr><td align="left" balign="left"> - betweenAngles(greater : double, lesser : double) : double </td></tr>
<tr><td align="left" balign="left"> + setPose(aPose : Pose) </td></tr>
<tr><td align="left" balign="left"> + moveStarted(move : Move, mp : MoveProvider) </td></tr>
<tr><td align="left" balign="left"> + moveStopped(move : Move, mp : MoveProvider) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.localization.BeaconTriangle
	c2 [label=<<table title="lejos.robotics.localization.BeaconTriangle" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> BeaconTriangle </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ beacon1 : Point </td></tr>
<tr><td align="left" balign="left"> ~ beacon2 : Point </td></tr>
<tr><td align="left" balign="left"> ~ beacon3 : Point </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + BeaconTriangle(beacon1 : Point, beacon2 : Point, beacon3 : Point) </td></tr>
<tr><td align="left" balign="left"> + calcPose(a1 : double, a2 : double, a3 : double) : Pose </td></tr>
<tr><td align="left" balign="left"> - sin(d : double) : double </td></tr>
<tr><td align="left" balign="left"> - cos(d : double) : double </td></tr>
<tr><td align="left" balign="left"> - atan(r : double) : double </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.localization.CompassPoseProvider
	c3 [label=<<table title="lejos.robotics.localization.CompassPoseProvider" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CompassPoseProvider </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - compass : DirectionFinder </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CompassPoseProvider(mp : MoveProvider, compass : DirectionFinder) </td></tr>
<tr><td align="left" balign="left"> + getPose() : Pose </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.localization.MCLParticle
	c4 [label=<<table title="lejos.robotics.localization.MCLParticle" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> MCLParticle </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - rand : Random </td></tr>
<tr><td align="left" balign="left"> - pose : Pose </td></tr>
<tr><td align="left" balign="left"> - weight : float </td></tr>
<tr><td align="left" balign="left"> - debug : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + MCLParticle(pose : Pose) </td></tr>
<tr><td align="left" balign="left"> + setDebug(yes : boolean) </td></tr>
<tr><td align="left" balign="left"> + setWeight(weight : float) </td></tr>
<tr><td align="left" balign="left"> + getWeight() : float </td></tr>
<tr><td align="left" balign="left"> + getPose() : Pose </td></tr>
<tr><td align="left" balign="left"> + calculateWeight(rr : RangeReadings, map : RangeMap, divisor : float) </td></tr>
<tr><td align="left" balign="left"> + getReading(i : int, rr : RangeReadings, map : RangeMap) : float </td></tr>
<tr><td align="left" balign="left"> + getReadings(rr : RangeReadings, map : RangeMap) : RangeReadings </td></tr>
<tr><td align="left" balign="left"> + applyMove(move : Move, distanceNoiseFactor : float, angleNoiseFactor : float) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.localization.MCLParticleSet
	c5 [label=<<table title="lejos.robotics.localization.MCLParticleSet" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> MCLParticleSet </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - BIG_FLOAT : float </td></tr>
<tr><td align="left" balign="left"> + maxIterations : int </td></tr>
<tr><td align="left" balign="left"> - twoSigmaSquared : float </td></tr>
<tr><td align="left" balign="left"> - distanceNoiseFactor : float </td></tr>
<tr><td align="left" balign="left"> - angleNoiseFactor : float </td></tr>
<tr><td align="left" balign="left"> - numParticles : int </td></tr>
<tr><td align="left" balign="left"> - particles : MCLParticle[] </td></tr>
<tr><td align="left" balign="left"> - map : RangeMap </td></tr>
<tr><td align="left" balign="left"> - maxWeight : float </td></tr>
<tr><td align="left" balign="left"> - totalWeight : float </td></tr>
<tr><td align="left" balign="left"> - border : int </td></tr>
<tr><td align="left" balign="left"> - random : Random </td></tr>
<tr><td align="left" balign="left"> - boundingRect : Rectangle </td></tr>
<tr><td align="left" balign="left"> - debug : boolean </td></tr>
<tr><td align="left" balign="left"> - _iterations : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + MCLParticleSet(map : RangeMap, numParticles : int, border : int) </td></tr>
<tr><td align="left" balign="left"> + MCLParticleSet(map : RangeMap, numParticles : int, border : int, readings : RangeReadings, divisor : float, minWeight : float) </td></tr>
<tr><td align="left" balign="left"> + MCLParticleSet(map : RangeMap, numParticles : int, initialPose : Pose, radiusNoise : float, headingNoise : float) </td></tr>
<tr><td align="left" balign="left"> - generateParticle() : MCLParticle </td></tr>
<tr><td align="left" balign="left"> + numParticles() : int </td></tr>
<tr><td align="left" balign="left"> + setDebug(debug : boolean) </td></tr>
<tr><td align="left" balign="left"> + getParticle(i : int) : MCLParticle </td></tr>
<tr><td align="left" balign="left"> + resample() : boolean </td></tr>
<tr><td align="left" balign="left"> + calculateWeights(rr : RangeReadings, map : RangeMap) : boolean </td></tr>
<tr><td align="left" balign="left"> + applyMove(move : Move) </td></tr>
<tr><td align="left" balign="left"> + getMaxWeight() : float </td></tr>
<tr><td align="left" balign="left"> + getBorder() : float </td></tr>
<tr><td align="left" balign="left"> + setBorder(border : int) </td></tr>
<tr><td align="left" balign="left"> + setSigma(sigma : float) </td></tr>
<tr><td align="left" balign="left"> + setDistanceNoiseFactor(factor : float) </td></tr>
<tr><td align="left" balign="left"> + setAngleNoiseFactor(factor : float) </td></tr>
<tr><td align="left" balign="left"> + setMaxIterations(max : int) </td></tr>
<tr><td align="left" balign="left"> + findClosest(x : float, y : float) : int </td></tr>
<tr><td align="left" balign="left"> + dumpObject(dos : DataOutputStream) </td></tr>
<tr><td align="left" balign="left"> + getIterations() : int </td></tr>
<tr><td align="left" balign="left"> + loadObject(dis : DataInputStream) </td></tr>
<tr><td align="left" balign="left"> + dumpClosest(rr : RangeReadings, dos : DataOutputStream, x : float, y : float) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.localization.MCLPoseProvider
	c6 [label=<<table title="lejos.robotics.localization.MCLPoseProvider" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> MCLPoseProvider </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - particles : MCLParticleSet </td></tr>
<tr><td align="left" balign="left"> - scanner : RangeScanner </td></tr>
<tr><td align="left" balign="left"> - map : RangeMap </td></tr>
<tr><td align="left" balign="left"> - numParticles : int </td></tr>
<tr><td align="left" balign="left"> - _x : float </td></tr>
<tr><td align="left" balign="left"> - _y : float </td></tr>
<tr><td align="left" balign="left"> - _heading : float </td></tr>
<tr><td align="left" balign="left"> - minX : float </td></tr>
<tr><td align="left" balign="left"> - maxX : float </td></tr>
<tr><td align="left" balign="left"> - minY : float </td></tr>
<tr><td align="left" balign="left"> - maxY : float </td></tr>
<tr><td align="left" balign="left"> - varX : double </td></tr>
<tr><td align="left" balign="left"> - varY : double </td></tr>
<tr><td align="left" balign="left"> - varH : double </td></tr>
<tr><td align="left" balign="left"> - updated : boolean </td></tr>
<tr><td align="left" balign="left"> - updater : MCLPoseProvider.Updater </td></tr>
<tr><td align="left" balign="left"> - border : int </td></tr>
<tr><td align="left" balign="left"> - debug : boolean </td></tr>
<tr><td align="left" balign="left"> - busy : boolean </td></tr>
<tr><td align="left" balign="left"> - BIG_FLOAT : float </td></tr>
<tr><td align="left" balign="left"> - readings : RangeReadings </td></tr>
<tr><td align="left" balign="left"> - lost : boolean </td></tr>
<tr><td align="left" balign="left"> - incomplete : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + MCLPoseProvider(mp : MoveProvider, scanner : RangeScanner, map : RangeMap, numParticles : int, border : int) </td></tr>
<tr><td align="left" balign="left"> + MCLPoseProvider(map : RangeMap, numParticles : int, border : int) </td></tr>
<tr><td align="left" balign="left"> + setMap(map : RangeMap) </td></tr>
<tr><td align="left" balign="left"> + setInitialPose(aPose : Pose, radiusNoise : float, headingNoise : float) </td></tr>
<tr><td align="left" balign="left"> + setInitialPose(readings : RangeReadings, sigma : float) </td></tr>
<tr><td align="left" balign="left"> + setDebug(on : boolean) </td></tr>
<tr><td align="left" balign="left"> + setPose(aPose : Pose) </td></tr>
<tr><td align="left" balign="left"> + getParticles() : MCLParticleSet </td></tr>
<tr><td align="left" balign="left"> + getReadings() : RangeReadings </td></tr>
<tr><td align="left" balign="left"> + setParticles(particles : MCLParticleSet) </td></tr>
<tr><td align="left" balign="left"> + generateParticles() </td></tr>
<tr><td align="left" balign="left"> + moveStarted(event : Move, mp : MoveProvider) </td></tr>
<tr><td align="left" balign="left"> + moveStopped(event : Move, mp : MoveProvider) </td></tr>
<tr><td align="left" balign="left"> + update() : boolean </td></tr>
<tr><td align="left" balign="left"> + update(readings : RangeReadings) : boolean </td></tr>
<tr><td align="left" balign="left"> + isUpdated() : boolean </td></tr>
<tr><td align="left" balign="left"> + isLost() : boolean </td></tr>
<tr><td align="left" balign="left"> + incompleteRanges() : boolean </td></tr>
<tr><td align="left" balign="left"> + getXRange() : float </td></tr>
<tr><td align="left" balign="left"> + getYRange() : float </td></tr>
<tr><td align="left" balign="left"> + getPose() : Pose </td></tr>
<tr><td align="left" balign="left"> + getEstimatedPose() : Pose </td></tr>
<tr><td align="left" balign="left"> + estimatePose() </td></tr>
<tr><td align="left" balign="left"> + getRangeReadings() : RangeReadings </td></tr>
<tr><td align="left" balign="left"> + getErrorRect() : Rectangle2D </td></tr>
<tr><td align="left" balign="left"> + getMaxX() : float </td></tr>
<tr><td align="left" balign="left"> + getMinX() : float </td></tr>
<tr><td align="left" balign="left"> + getMaxY() : float </td></tr>
<tr><td align="left" balign="left"> + getMinY() : float </td></tr>
<tr><td align="left" balign="left"> + getSigmaX() : float </td></tr>
<tr><td align="left" balign="left"> + getSigmaY() : float </td></tr>
<tr><td align="left" balign="left"> + getSigmaHeading() : float </td></tr>
<tr><td align="left" balign="left"> + getScanner() : RangeScanner </td></tr>
<tr><td align="left" balign="left"> + dumpObject(dos : DataOutputStream) </td></tr>
<tr><td align="left" balign="left"> + loadObject(dis : DataInputStream) </td></tr>
<tr><td align="left" balign="left"> + isBusy() : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.localization.MCLPoseProvider.Updater
	c7 [label=<<table title="lejos.robotics.localization.MCLPoseProvider.Updater" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Updater </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ keepGoing : boolean </td></tr>
<tr><td align="left" balign="left"> ~ events : ArrayList&lt;Move&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ Updater() </td></tr>
<tr><td align="left" balign="left"> + moveStopped(theEvent : Move) </td></tr>
<tr><td align="left" balign="left"> + run() </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.localization.OdometryPoseProvider
	c8 [label=<<table title="lejos.robotics.localization.OdometryPoseProvider" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> OdometryPoseProvider </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - x : float </td></tr>
<tr><td align="left" balign="left"> - y : float </td></tr>
<tr><td align="left" balign="left"> - heading : float </td></tr>
<tr><td align="left" balign="left"> - angle0 : float </td></tr>
<tr><td align="left" balign="left"> - distance0 : float </td></tr>
<tr><td align="left" balign="left"> ~ mp : MoveProvider </td></tr>
<tr><td align="left" balign="left"> ~ current : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + OdometryPoseProvider(mp : MoveProvider) </td></tr>
<tr><td align="left" balign="left"> + getPose() : Pose </td></tr>
<tr><td align="left" balign="left"> + moveStarted(move : Move, mp : MoveProvider) </td></tr>
<tr><td align="left" balign="left"> + setPose(aPose : Pose) </td></tr>
<tr><td align="left" balign="left"> + moveStopped(move : Move, mp : MoveProvider) </td></tr>
<tr><td align="left" balign="left"> - updatePose(event : Move) </td></tr>
<tr><td align="left" balign="left"> - normalize(angle : float) : float </td></tr>
<tr><td align="left" balign="left"> - setPosition(p : Point) </td></tr>
<tr><td align="left" balign="left"> - setHeading(heading : float) </td></tr>
<tr><td align="left" balign="left"> + sampleSize() : int </td></tr>
<tr><td align="left" balign="left"> + fetchSample(sample : float[], offset : int) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.localization.PoseProvider
	c9 [label=<<table title="lejos.robotics.localization.PoseProvider" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> PoseProvider </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getPose() : Pose </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setPose(aPose : Pose) </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.mapping.LineMap
	c10 [label=<<table title="lejos.robotics.mapping.LineMap" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> LineMap </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - lines : Line[] </td></tr>
<tr><td align="left" balign="left"> - boundingRect : Rectangle </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + LineMap(lines : Line[], boundingRect : Rectangle) </td></tr>
<tr><td align="left" balign="left"> + LineMap() </td></tr>
<tr><td align="left" balign="left"> + range(pose : Pose) : float </td></tr>
<tr><td align="left" balign="left"> + inside(p : Point) : boolean </td></tr>
<tr><td align="left" balign="left"> + getBoundingRect() : Rectangle </td></tr>
<tr><td align="left" balign="left"> + dumpObject(dos : DataOutputStream) </td></tr>
<tr><td align="left" balign="left"> + loadObject(dis : DataInputStream) </td></tr>
<tr><td align="left" balign="left"> + getLines() : Line[] </td></tr>
<tr><td align="left" balign="left"> + createSVGFile(fileName : String) </td></tr>
<tr><td align="left" balign="left"> + flip() : LineMap </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.mapping.OccupancyGridMap
	c11 [label=<<table title="lejos.robotics.mapping.OccupancyGridMap" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> OccupancyGridMap </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - width : int </td></tr>
<tr><td align="left" balign="left"> - height : int </td></tr>
<tr><td align="left" balign="left"> - freeThreshold : double </td></tr>
<tr><td align="left" balign="left"> - occupiedThreshold : double </td></tr>
<tr><td align="left" balign="left"> - resolution : double </td></tr>
<tr><td align="left" balign="left"> - cells : byte[][] </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + OccupancyGridMap(width : int, height : int, freeThreshold : double, occupiedThreshold : double, resolution : double) </td></tr>
<tr><td align="left" balign="left"> + getWidth() : int </td></tr>
<tr><td align="left" balign="left"> + getHeight() : int </td></tr>
<tr><td align="left" balign="left"> + getResolution() : double </td></tr>
<tr><td align="left" balign="left"> + getFreeThreshold() : double </td></tr>
<tr><td align="left" balign="left"> + getOccupiedThreshold() : double </td></tr>
<tr><td align="left" balign="left"> + setOccupied(x : int, y : int, occupied : int) </td></tr>
<tr><td align="left" balign="left"> + getOccupied(x : int, y : int) : int </td></tr>
<tr><td align="left" balign="left"> + isOccupied(x : int, y : int) : boolean </td></tr>
<tr><td align="left" balign="left"> + isFree(x : int, y : int) : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.mapping.RangeMap
	c12 [label=<<table title="lejos.robotics.mapping.RangeMap" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> RangeMap </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + range(pose : Pose) : float </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + inside(p : Point) : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getBoundingRect() : Rectangle </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.mapping.SVGMapLoader
	c13 [label=<<table title="lejos.robotics.mapping.SVGMapLoader" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> SVGMapLoader </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - MAX_BOUND : float </td></tr>
<tr><td align="left" balign="left"> - in : InputStream </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + SVGMapLoader(in : InputStream) </td></tr>
<tr><td align="left" balign="left"> + readLineMap() : LineMap </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.mapping.ShapefileLoader
	c14 [label=<<table title="lejos.robotics.mapping.ShapefileLoader" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ShapefileLoader </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - NULL_SHAPE : byte </td></tr>
<tr><td align="left" balign="left"> - POINT : byte </td></tr>
<tr><td align="left" balign="left"> - POLYLINE : byte </td></tr>
<tr><td align="left" balign="left"> - POLYGON : byte </td></tr>
<tr><td align="left" balign="left"> - MULTIPOINT : byte </td></tr>
<tr><td align="left" balign="left"> - SHAPEFILE_ID : int </td></tr>
<tr><td align="left" balign="left"> ~ data_is : DataInputStream </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ShapefileLoader(in : InputStream) </td></tr>
<tr><td align="left" balign="left"> + readLineMap() : LineMap </td></tr>
<tr><td align="left" balign="left"> - readLEInt() : int </td></tr>
<tr><td align="left" balign="left"> - readLEDouble() : double </td></tr>
<tr><td align="left" balign="left"> - readLELong() : long </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.navigation.ArcAlgorithms
	c15 [label=<<table title="lejos.robotics.navigation.ArcAlgorithms" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ArcAlgorithms </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - ArcAlgorithms() </td></tr>
<tr><td align="left" balign="left"> + getBestPath(start : Pose, turnRadius1 : float, destination : Pose, turnRadius2 : float) : Move[] </td></tr>
<tr><td align="left" balign="left"> + getAvailablePaths(start : Pose, turnRadius1 : float, destination : Pose, turnRadius2 : float) : Move[][] </td></tr>
<tr><td align="left" balign="left"> + getAvailablePaths(start : Pose, destination : Point, turnRadius : float) : Move[][] </td></tr>
<tr><td align="left" balign="left"> + getBestPath(start : Pose, destination : Point, radius : float) : Move[] </td></tr>
<tr><td align="left" balign="left"> + getBestPath(paths : Move[][]) : Move[] </td></tr>
<tr><td align="left" balign="left"> + findPointOnHeading(original : Point, heading : float, distance : float) : Point </td></tr>
<tr><td align="left" balign="left"> + getTriangleAngle(p1 : Point, p2 : Point, pa : Point) : float </td></tr>
<tr><td align="left" balign="left"> + getHeading(oldHeading : float, changeInHeading : float) : float </td></tr>
<tr><td align="left" balign="left"> + getArc(p1 : Point, p2 : Point, radius : float, heading : float, forward : boolean) : float </td></tr>
<tr><td align="left" balign="left"> + getArcBackward(forwardArc : float) : float </td></tr>
<tr><td align="left" balign="left"> + getArcOld(p1 : Point, p2 : Point, radius : double) : double </td></tr>
<tr><td align="left" balign="left"> - distP2toP3(radius : double, z : double) : double </td></tr>
<tr><td align="left" balign="left"> + distBetweenPoints(a : Point, b : Point) : float </td></tr>
<tr><td align="left" balign="left"> + getHeading(from : Point, to : Point) : float </td></tr>
<tr><td align="left" balign="left"> + findP2(c : Point, p3 : Point, radius : float) : Point </td></tr>
<tr><td align="left" balign="left"> + findCircleCenter(p1 : Point, radius : float, heading : float) : Point </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.navigation.ArcMoveController
	c16 [label=<<table title="lejos.robotics.navigation.ArcMoveController" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> ArcMoveController </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getMinRadius() : double </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setMinRadius(radius : double) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + arcForward(radius : double) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + arcBackward(radius : double) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + arc(radius : double, angle : double) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + arc(radius : double, angle : double, immediateReturn : boolean) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + travelArc(radius : double, distance : double) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + travelArc(radius : double, distance : double, immediateReturn : boolean) </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.navigation.ArcRotateMoveController
	c17 [label=<<table title="lejos.robotics.navigation.ArcRotateMoveController" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> ArcRotateMoveController </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.navigation.DestinationUnreachableException
	c18 [label=<<table title="lejos.robotics.navigation.DestinationUnreachableException" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> DestinationUnreachableException </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + DestinationUnreachableException() </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.navigation.DifferentialPilot
	c19 [label=<<table title="lejos.robotics.navigation.DifferentialPilot" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> DifferentialPilot </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _turnRadius : float </td></tr>
<tr><td align="left" balign="left"> # _left : RegulatedMotor </td></tr>
<tr><td align="left" balign="left"> # _right : RegulatedMotor </td></tr>
<tr><td align="left" balign="left"> - _inside : RegulatedMotor </td></tr>
<tr><td align="left" balign="left"> # _outside : RegulatedMotor </td></tr>
<tr><td align="left" balign="left"> - _steerRatio : float </td></tr>
<tr><td align="left" balign="left"> # _leftDegPerDistance : float </td></tr>
<tr><td align="left" balign="left"> # _rightDegPerDistance : float </td></tr>
<tr><td align="left" balign="left"> - _leftTurnRatio : float </td></tr>
<tr><td align="left" balign="left"> - _rightTurnRatio : float </td></tr>
<tr><td align="left" balign="left"> - _robotTravelSpeed : float </td></tr>
<tr><td align="left" balign="left"> - _robotRotateSpeed : float </td></tr>
<tr><td align="left" balign="left"> - _parity : byte </td></tr>
<tr><td align="left" balign="left"> - _trackWidth : float </td></tr>
<tr><td align="left" balign="left"> - _leftWheelDiameter : float </td></tr>
<tr><td align="left" balign="left"> - _rightWheelDiameter : float </td></tr>
<tr><td align="left" balign="left"> - _leftTC : int </td></tr>
<tr><td align="left" balign="left"> - _rightTC : int </td></tr>
<tr><td align="left" balign="left"> - _listeners : ArrayList&lt;MoveListener&gt; </td></tr>
<tr><td align="left" balign="left"> # _type : Move.MoveType </td></tr>
<tr><td align="left" balign="left"> - _distance : double </td></tr>
<tr><td align="left" balign="left"> - _angle : double </td></tr>
<tr><td align="left" balign="left"> - _acceleration : int </td></tr>
<tr><td align="left" balign="left"> - _quickAcceleration : int </td></tr>
<tr><td align="left" balign="left"> - _leftDirection : byte </td></tr>
<tr><td align="left" balign="left"> - _rightDirection : byte </td></tr>
<tr><td align="left" balign="left"> - _monitor : DifferentialPilot.Monitor </td></tr>
<tr><td align="left" balign="left"> - _moveActive : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + DifferentialPilot(wheelDiameter : double, trackWidth : double, leftMotor : RegulatedMotor, rightMotor : RegulatedMotor) </td></tr>
<tr><td align="left" balign="left"> + DifferentialPilot(wheelDiameter : double, trackWidth : double, leftMotor : RegulatedMotor, rightMotor : RegulatedMotor, reverse : boolean) </td></tr>
<tr><td align="left" balign="left"> + DifferentialPilot(leftWheelDiameter : double, rightWheelDiameter : double, trackWidth : double, leftMotor : RegulatedMotor, rightMotor : RegulatedMotor, reverse : boolean) </td></tr>
<tr><td align="left" balign="left"> - getLeftCount() : int </td></tr>
<tr><td align="left" balign="left"> - getRightCount() : int </td></tr>
<tr><td align="left" balign="left"> - setSpeed(leftSpeed : int, rightSpeed : int) </td></tr>
<tr><td align="left" balign="left"> + setLinearSpeed(travelSpeed : double) </td></tr>
<tr><td align="left" balign="left"> + getLinearSpeed() : double </td></tr>
<tr><td align="left" balign="left"> + setLinearAcceleration(acceleration : double) </td></tr>
<tr><td align="left" balign="left"> + getLinearAcceleration() : double </td></tr>
<tr><td align="left" balign="left"> - setMotorAccel(acceleration : int) </td></tr>
<tr><td align="left" balign="left"> + getMaxLinearSpeed() : double </td></tr>
<tr><td align="left" balign="left"> + setAngularSpeed(rotateSpeed : double) </td></tr>
<tr><td align="left" balign="left"> + getAngularSpeed() : double </td></tr>
<tr><td align="left" balign="left"> + getMaxRotateSpeed() : float </td></tr>
<tr><td align="left" balign="left"> + getMaxAngularSpeed() : double </td></tr>
<tr><td align="left" balign="left"> + forward() </td></tr>
<tr><td align="left" balign="left"> + backward() </td></tr>
<tr><td align="left" balign="left"> - bak() </td></tr>
<tr><td align="left" balign="left"> - fwd() </td></tr>
<tr><td align="left" balign="left"> + rotateLeft() </td></tr>
<tr><td align="left" balign="left"> + rotateRight() </td></tr>
<tr><td align="left" balign="left"> + rotate(angle : double) </td></tr>
<tr><td align="left" balign="left"> + rotate(angle : double, immediateReturn : boolean) </td></tr>
<tr><td align="left" balign="left"> + stop() </td></tr>
<tr><td align="left" balign="left"> + quickStop() </td></tr>
<tr><td align="left" balign="left"> + travel(distance : double) </td></tr>
<tr><td align="left" balign="left"> + travel(distance : double, immediateReturn : boolean) </td></tr>
<tr><td align="left" balign="left"> + arcForward(radius : double) </td></tr>
<tr><td align="left" balign="left"> + arcBackward(radius : double) </td></tr>
<tr><td align="left" balign="left"> + arc(radius : double, angle : double) </td></tr>
<tr><td align="left" balign="left"> + arc(radius : double, angle : double, immediateReturn : boolean) </td></tr>
<tr><td align="left" balign="left"> + travelArc(radius : double, distance : double) </td></tr>
<tr><td align="left" balign="left"> + travelArc(radius : double, distance : double, immediateReturn : boolean) </td></tr>
<tr><td align="left" balign="left"> - turnRate(radius : double) : double </td></tr>
<tr><td align="left" balign="left"> - radius(turnRate : double) : double </td></tr>
<tr><td align="left" balign="left"> + steer(turnRate : double) </td></tr>
<tr><td align="left" balign="left"> + steerBackward(turnRate : double) </td></tr>
<tr><td align="left" balign="left"> + steer(turnRate : double, angle : double) </td></tr>
<tr><td align="left" balign="left"> + steer(turnRate : double, angle : double, immediateReturn : boolean) </td></tr>
<tr><td align="left" balign="left"> ~ steerPrep(turnRate : double) </td></tr>
<tr><td align="left" balign="left"> # movementStart() </td></tr>
<tr><td align="left" balign="left"> # movementActive() </td></tr>
<tr><td align="left" balign="left"> - movementStop() </td></tr>
<tr><td align="left" balign="left"> + isMoving() : boolean </td></tr>
<tr><td align="left" balign="left"> - waitComplete() </td></tr>
<tr><td align="left" balign="left"> - waitForActiveMove() </td></tr>
<tr><td align="left" balign="left"> + isStalled() : boolean </td></tr>
<tr><td align="left" balign="left"> + reset() </td></tr>
<tr><td align="left" balign="left"> + setMinRadius(radius : double) </td></tr>
<tr><td align="left" balign="left"> + getMinRadius() : double </td></tr>
<tr><td align="left" balign="left"> + getMovementIncrement() : float </td></tr>
<tr><td align="left" balign="left"> + getAngleIncrement() : float </td></tr>
<tr><td align="left" balign="left"> + addMoveListener(m : MoveListener) </td></tr>
<tr><td align="left" balign="left"> + getMovement() : Move </td></tr>
<tr><td align="left" balign="left"> + getTurnRate() : double </td></tr>
<tr><td align="left" balign="left"> + setAngularAcceleration(acceleration : double) </td></tr>
<tr><td align="left" balign="left"> + getAngularAcceleration() : double </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.navigation.DifferentialPilot.Monitor
	c20 [label=<<table title="lejos.robotics.navigation.DifferentialPilot.Monitor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Monitor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + more : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Monitor() </td></tr>
<tr><td align="left" balign="left"> + run() </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.navigation.LineFollowingMoveController
	c21 [label=<<table title="lejos.robotics.navigation.LineFollowingMoveController" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> LineFollowingMoveController </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + steer(turnRate : double) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + steerBackward(steerRatio : double) </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.navigation.Move
	c22 [label=<<table title="lejos.robotics.navigation.Move" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Move </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - distanceTraveled : float </td></tr>
<tr><td align="left" balign="left"> - angleTurned : float </td></tr>
<tr><td align="left" balign="left"> - moveType : Move.MoveType </td></tr>
<tr><td align="left" balign="left"> - arcRadius : float </td></tr>
<tr><td align="left" balign="left"> - isMoving : boolean </td></tr>
<tr><td align="left" balign="left"> - timeStamp : long </td></tr>
<tr><td align="left" balign="left"> - travelSpeed : float </td></tr>
<tr><td align="left" balign="left"> - rotateSpeed : float </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Move(distance : float, angle : float, isMoving : boolean) </td></tr>
<tr><td align="left" balign="left"> + Move(type : Move.MoveType, distance : float, angle : float, travelSpeed : float, rotateSpeed : float, isMoving : boolean) </td></tr>
<tr><td align="left" balign="left"> + Move(type : Move.MoveType, distance : float, angle : float, isMoving : boolean) </td></tr>
<tr><td align="left" balign="left"> + Move(isMoving : boolean, angle : float, turnRadius : float) </td></tr>
<tr><td align="left" balign="left"> + setValues(type : Move.MoveType, distance : float, angle : float, isMoving : boolean) </td></tr>
<tr><td align="left" balign="left"> + setDynamics(travelSpeed : float, rotateSpeed : float) </td></tr>
<tr><td align="left" balign="left"> - calcMoveType(distance : float, angle : float) : Move.MoveType </td></tr>
<tr><td align="left" balign="left"> + getDistanceTraveled() : float </td></tr>
<tr><td align="left" balign="left"> + getTimeStamp() : long </td></tr>
<tr><td align="left" balign="left"> + getAngleTurned() : float </td></tr>
<tr><td align="left" balign="left"> + getMoveType() : Move.MoveType </td></tr>
<tr><td align="left" balign="left"> + getArcRadius() : float </td></tr>
<tr><td align="left" balign="left"> + getTravelSpeed() : float </td></tr>
<tr><td align="left" balign="left"> + getRotateSpeed() : float </td></tr>
<tr><td align="left" balign="left"> + isMoving() : boolean </td></tr>
<tr><td align="left" balign="left"> + convertDistanceToAngle(distance : float, turnRadius : float) : float </td></tr>
<tr><td align="left" balign="left"> + convertAngleToDistance(angle : float, turnRadius : float) : float </td></tr>
<tr><td align="left" balign="left"> + dumpObject(dos : DataOutputStream) </td></tr>
<tr><td align="left" balign="left"> + loadObject(dis : DataInputStream) </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.navigation.Move.MoveType
	c23 [label=<<table title="lejos.robotics.navigation.Move.MoveType" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;enumeration&#187; </td></tr>
<tr><td align="center" balign="center"> MoveType </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> TRAVEL </td></tr>
<tr><td align="left" balign="left"> ROTATE </td></tr>
<tr><td align="left" balign="left"> ARC </td></tr>
<tr><td align="left" balign="left"> STOP </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.navigation.MoveController
	c24 [label=<<table title="lejos.robotics.navigation.MoveController" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> MoveController </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + WHEEL_SIZE_NXT1 : double </td></tr>
<tr><td align="left" balign="left"> + WHEEL_SIZE_NXT2 : double </td></tr>
<tr><td align="left" balign="left"> + WHEEL_SIZE_EV3 : double </td></tr>
<tr><td align="left" balign="left"> + WHEEL_SIZE_RCX : double </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + forward() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + backward() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + stop() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + isMoving() : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + travel(distance : double) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + travel(distance : double, immediateReturn : boolean) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setLinearSpeed(speed : double) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getLinearSpeed() : double </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getMaxLinearSpeed() : double </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setLinearAcceleration(acceleration : double) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getLinearAcceleration() : double </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.navigation.MoveListener
	c25 [label=<<table title="lejos.robotics.navigation.MoveListener" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> MoveListener </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + moveStarted(event : Move, mp : MoveProvider) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + moveStopped(event : Move, mp : MoveProvider) </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.navigation.MoveProvider
	c26 [label=<<table title="lejos.robotics.navigation.MoveProvider" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> MoveProvider </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getMovement() : Move </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + addMoveListener(listener : MoveListener) </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.navigation.NavigationListener
	c27 [label=<<table title="lejos.robotics.navigation.NavigationListener" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> NavigationListener </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + atWaypoint(waypoint : Waypoint, pose : Pose, sequence : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + pathComplete(waypoint : Waypoint, pose : Pose, sequence : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + pathInterrupted(waypoint : Waypoint, pose : Pose, sequence : int) </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.navigation.Navigator
	c28 [label=<<table title="lejos.robotics.navigation.Navigator" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Navigator </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _nav : Navigator.Nav </td></tr>
<tr><td align="left" balign="left"> - _path : Path </td></tr>
<tr><td align="left" balign="left"> - _keepGoing : boolean </td></tr>
<tr><td align="left" balign="left"> - _singleStep : boolean </td></tr>
<tr><td align="left" balign="left"> - _interrupted : boolean </td></tr>
<tr><td align="left" balign="left"> - _pilot : MoveController </td></tr>
<tr><td align="left" balign="left"> - poseProvider : PoseProvider </td></tr>
<tr><td align="left" balign="left"> - _pose : Pose </td></tr>
<tr><td align="left" balign="left"> - _destination : Waypoint </td></tr>
<tr><td align="left" balign="left"> - _radius : double </td></tr>
<tr><td align="left" balign="left"> - _sequenceNr : int </td></tr>
<tr><td align="left" balign="left"> - _listeners : ArrayList&lt;NavigationListener&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Navigator(pilot : MoveController) </td></tr>
<tr><td align="left" balign="left"> + Navigator(pilot : MoveController, poseProvider : PoseProvider) </td></tr>
<tr><td align="left" balign="left"> + setPoseProvider(aProvider : PoseProvider) </td></tr>
<tr><td align="left" balign="left"> + addNavigationListener(listener : NavigationListener) </td></tr>
<tr><td align="left" balign="left"> + getPoseProvider() : PoseProvider </td></tr>
<tr><td align="left" balign="left"> + getMoveController() : MoveController </td></tr>
<tr><td align="left" balign="left"> + setPath(path : Path) </td></tr>
<tr><td align="left" balign="left"> + clearPath() </td></tr>
<tr><td align="left" balign="left"> + getPath() : Path </td></tr>
<tr><td align="left" balign="left"> + followPath(path : Path) </td></tr>
<tr><td align="left" balign="left"> + followPath() </td></tr>
<tr><td align="left" balign="left"> + singleStep(yes : boolean) </td></tr>
<tr><td align="left" balign="left"> + goTo(destination : Waypoint) </td></tr>
<tr><td align="left" balign="left"> + goTo(x : float, y : float) </td></tr>
<tr><td align="left" balign="left"> + goTo(x : float, y : float, heading : float) </td></tr>
<tr><td align="left" balign="left"> + rotateTo(angle : double) : boolean </td></tr>
<tr><td align="left" balign="left"> + addWaypoint(aWaypoint : Waypoint) </td></tr>
<tr><td align="left" balign="left"> + addWaypoint(x : float, y : float) </td></tr>
<tr><td align="left" balign="left"> + addWaypoint(x : float, y : float, heading : float) </td></tr>
<tr><td align="left" balign="left"> + stop() </td></tr>
<tr><td align="left" balign="left"> + getWaypoint() : Waypoint </td></tr>
<tr><td align="left" balign="left"> + pathCompleted() : boolean </td></tr>
<tr><td align="left" balign="left"> + waitForStop() : boolean </td></tr>
<tr><td align="left" balign="left"> + isMoving() : boolean </td></tr>
<tr><td align="left" balign="left"> + pathGenerated() </td></tr>
<tr><td align="left" balign="left"> - callListeners() </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.navigation.Navigator.Nav
	c29 [label=<<table title="lejos.robotics.navigation.Navigator.Nav" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Nav </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ more : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - Nav() </td></tr>
<tr><td align="left" balign="left"> + run() </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.navigation.Pose
	c30 [label=<<table title="lejos.robotics.navigation.Pose" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Pose </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # _location : Point </td></tr>
<tr><td align="left" balign="left"> # _heading : float </td></tr>
<tr><td align="left" balign="left"> # format : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Pose() </td></tr>
<tr><td align="left" balign="left"> + Pose(x : float, y : float, heading : float) </td></tr>
<tr><td align="left" balign="left"> + rotateUpdate(angle : float) </td></tr>
<tr><td align="left" balign="left"> + moveUpdate(distance : float) </td></tr>
<tr><td align="left" balign="left"> + translate(dx : float, dy : float) </td></tr>
<tr><td align="left" balign="left"> + arcUpdate(distance : float, turnAngle : float) </td></tr>
<tr><td align="left" balign="left"> + angleTo(destination : Point) : float </td></tr>
<tr><td align="left" balign="left"> + relativeBearing(destination : Point) : float </td></tr>
<tr><td align="left" balign="left"> + distanceTo(destination : Point) : float </td></tr>
<tr><td align="left" balign="left"> + pointAt(distance : float, bearing : float) : Point </td></tr>
<tr><td align="left" balign="left"> + getHeading() : float </td></tr>
<tr><td align="left" balign="left"> + getX() : float </td></tr>
<tr><td align="left" balign="left"> + getY() : float </td></tr>
<tr><td align="left" balign="left"> + getLocation() : Point </td></tr>
<tr><td align="left" balign="left"> + setLocation(p : Point) </td></tr>
<tr><td align="left" balign="left"> + setLocation(x : float, y : float) </td></tr>
<tr><td align="left" balign="left"> + setHeading(heading : float) </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + dumpObject(dos : DataOutputStream) </td></tr>
<tr><td align="left" balign="left"> + loadObject(dis : DataInputStream) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.navigation.RotateMoveController
	c31 [label=<<table title="lejos.robotics.navigation.RotateMoveController" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> RotateMoveController </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + rotate(angle : double) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + rotate(angle : double, immediateReturn : boolean) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setAngularSpeed(speed : double) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getAngularSpeed() : double </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getMaxAngularSpeed() : double </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setAngularAcceleration(acceleration : double) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getAngularAcceleration() : double </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + rotateRight() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + rotateLeft() </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.navigation.Waypoint
	c32 [label=<<table title="lejos.robotics.navigation.Waypoint" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Waypoint </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # heading : float </td></tr>
<tr><td align="left" balign="left"> # headingRequired : boolean </td></tr>
<tr><td align="left" balign="left"> # maxPositionError : float </td></tr>
<tr><td align="left" balign="left"> # maxHeadingError : float </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Waypoint(x : double, y : double) </td></tr>
<tr><td align="left" balign="left"> + Waypoint(x : double, y : double, heading : double) </td></tr>
<tr><td align="left" balign="left"> + Waypoint(p : Point) </td></tr>
<tr><td align="left" balign="left"> + getHeading() : double </td></tr>
<tr><td align="left" balign="left"> + isHeadingRequired() : boolean </td></tr>
<tr><td align="left" balign="left"> + getMaxPositionError() : double </td></tr>
<tr><td align="left" balign="left"> + setMaxPositionError(distance : double) </td></tr>
<tr><td align="left" balign="left"> + getMaxHeadingError() : double </td></tr>
<tr><td align="left" balign="left"> + setMaxHeadingError(distance : double) </td></tr>
<tr><td align="left" balign="left"> + getPose() : Pose </td></tr>
<tr><td align="left" balign="left"> + checkValidity(p : Pose) : boolean </td></tr>
<tr><td align="left" balign="left"> + dumpObject(dos : DataOutputStream) </td></tr>
<tr><td align="left" balign="left"> + loadObject(dis : DataInputStream) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.navigation.WaypointListener
	c33 [label=<<table title="lejos.robotics.navigation.WaypointListener" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> WaypointListener </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + addWaypoint(wp : Waypoint) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + pathGenerated() </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.objectdetection.Feature
	c34 [label=<<table title="lejos.robotics.objectdetection.Feature" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Feature </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getRangeReading() : RangeReading </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getRangeReadings() : RangeReadings </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getTimeStamp() : long </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.objectdetection.FeatureDetector
	c35 [label=<<table title="lejos.robotics.objectdetection.FeatureDetector" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> FeatureDetector </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + addListener(listener : FeatureListener) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + scan() : Feature </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + enableDetection(on : boolean) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + isEnabled() : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getDelay() : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setDelay(delay : int) </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.objectdetection.FeatureDetectorAdapter
	c36 [label=<<table title="lejos.robotics.objectdetection.FeatureDetectorAdapter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> FeatureDetectorAdapter </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - listeners : ArrayList&lt;FeatureListener&gt; </td></tr>
<tr><td align="left" balign="left"> - enabled : boolean </td></tr>
<tr><td align="left" balign="left"> - delay : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + FeatureDetectorAdapter(delay : int) </td></tr>
<tr><td align="left" balign="left"> + addListener(l : FeatureListener) </td></tr>
<tr><td align="left" balign="left"> + enableDetection(enable : boolean) </td></tr>
<tr><td align="left" balign="left"> + isEnabled() : boolean </td></tr>
<tr><td align="left" balign="left"> + getDelay() : int </td></tr>
<tr><td align="left" balign="left"> + setDelay(delay : int) </td></tr>
<tr><td align="left" balign="left"> # notifyListeners(feature : Feature) </td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + scan() : Feature </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.objectdetection.FeatureDetectorAdapter.MonitorThread
	c37 [label=<<table title="lejos.robotics.objectdetection.FeatureDetectorAdapter.MonitorThread" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> MonitorThread </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ prev_time : long </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - MonitorThread() </td></tr>
<tr><td align="left" balign="left"> + run() </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.objectdetection.FeatureListener
	c38 [label=<<table title="lejos.robotics.objectdetection.FeatureListener" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> FeatureListener </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + featureDetected(feature : Feature, detector : FeatureDetector) </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.objectdetection.FusorDetector
	c39 [label=<<table title="lejos.robotics.objectdetection.FusorDetector" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> FusorDetector </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - detectors : ArrayList&lt;FeatureDetector&gt; </td></tr>
<tr><td align="left" balign="left"> - readings : ArrayList&lt;RangeReadings&gt; </td></tr>
<tr><td align="left" balign="left"> - delay : int </td></tr>
<tr><td align="left" balign="left"> - enabled : boolean </td></tr>
<tr><td align="left" balign="left"> - listeners : ArrayList&lt;FeatureListener&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + FusorDetector() </td></tr>
<tr><td align="left" balign="left"> + addDetector(detector : FeatureDetector) </td></tr>
<tr><td align="left" balign="left"> + scan() : Feature </td></tr>
<tr><td align="left" balign="left"> + featureDetected(feature : Feature, detector : FeatureDetector) </td></tr>
<tr><td align="left" balign="left"> - notifyListeners(feature : Feature) </td></tr>
<tr><td align="left" balign="left"> + addListener(listener : FeatureListener) </td></tr>
<tr><td align="left" balign="left"> + enableDetection(on : boolean) </td></tr>
<tr><td align="left" balign="left"> + getDelay() : int </td></tr>
<tr><td align="left" balign="left"> + isEnabled() : boolean </td></tr>
<tr><td align="left" balign="left"> + setDelay(delay : int) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.objectdetection.FusorDetector.NotifyThread
	c40 [label=<<table title="lejos.robotics.objectdetection.FusorDetector.NotifyThread" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> NotifyThread </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - NotifyThread() </td></tr>
<tr><td align="left" balign="left"> + run() </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.objectdetection.RangeFeature
	c41 [label=<<table title="lejos.robotics.objectdetection.RangeFeature" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> RangeFeature </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - rr : RangeReading </td></tr>
<tr><td align="left" balign="left"> - rrs : RangeReadings </td></tr>
<tr><td align="left" balign="left"> - timeStamp : long </td></tr>
<tr><td align="left" balign="left"> - pose : Pose </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + RangeFeature(rr : RangeReading) </td></tr>
<tr><td align="left" balign="left"> + RangeFeature(rrs : RangeReadings) </td></tr>
<tr><td align="left" balign="left"> + RangeFeature(rrs : RangeReadings, pose : Pose) </td></tr>
<tr><td align="left" balign="left"> + getRangeReading() : RangeReading </td></tr>
<tr><td align="left" balign="left"> + getTimeStamp() : long </td></tr>
<tr><td align="left" balign="left"> + getRangeReadings() : RangeReadings </td></tr>
<tr><td align="left" balign="left"> + getPose() : Pose </td></tr>
<tr><td align="left" balign="left"> + dumpObject(dos : DataOutputStream) </td></tr>
<tr><td align="left" balign="left"> + loadObject(dis : DataInputStream) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.objectdetection.RangeFeatureDetector
	c42 [label=<<table title="lejos.robotics.objectdetection.RangeFeatureDetector" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> RangeFeatureDetector </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - range_finder : RangeFinder </td></tr>
<tr><td align="left" balign="left"> - max_dist : float </td></tr>
<tr><td align="left" balign="left"> - angle : float </td></tr>
<tr><td align="left" balign="left"> - pp : PoseProvider </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + RangeFeatureDetector(rf : RangeFinder, maxDistance : float, delay : int) </td></tr>
<tr><td align="left" balign="left"> + RangeFeatureDetector(rf : RangeFinder, maxDistance : float, delay : int, angle : double) </td></tr>
<tr><td align="left" balign="left"> + setPoseProvider(pp : PoseProvider) </td></tr>
<tr><td align="left" balign="left"> + setMaxDistance(distance : float) </td></tr>
<tr><td align="left" balign="left"> + getMaxDistance() : float </td></tr>
<tr><td align="left" balign="left"> + scan() : Feature </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.objectdetection.TouchFeatureDetector
	c43 [label=<<table title="lejos.robotics.objectdetection.TouchFeatureDetector" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> TouchFeatureDetector </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - touch_sensor : Touch </td></tr>
<tr><td align="left" balign="left"> - angle : float </td></tr>
<tr><td align="left" balign="left"> - range : float </td></tr>
<tr><td align="left" balign="left"> - DELAY : int </td></tr>
<tr><td align="left" balign="left"> - listeners : ArrayList&lt;FeatureListener&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + TouchFeatureDetector(touchSensor : Touch) </td></tr>
<tr><td align="left" balign="left"> + TouchFeatureDetector(touchSensor : Touch, xOffset : double, yOffset : double) </td></tr>
<tr><td align="left" balign="left"> + scan() : Feature </td></tr>
<tr><td align="left" balign="left"> # notifyListeners(feature : Feature) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.pathfinding.AstarSearchAlgorithm
	c44 [label=<<table title="lejos.robotics.pathfinding.AstarSearchAlgorithm" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AstarSearchAlgorithm </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - STRING_NAME : String </td></tr>
<tr><td align="left" balign="left"> ~ main_loop : int </td></tr>
<tr><td align="left" balign="left"> ~ neighbor_loop : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AstarSearchAlgorithm() </td></tr>
<tr><td align="left" balign="left"> + findPath(start : Node, goal : Node) : Path </td></tr>
<tr><td align="left" balign="left"> - getLowestCost(nodeSet : Collection&lt;Node&gt;) : Node </td></tr>
<tr><td align="left" balign="left"> - reconstructPath(current_node : Node, start : Node, path : Collection&lt;Waypoint&gt;) </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.pathfinding.DijkstraPathFinder
	c45 [label=<<table title="lejos.robotics.pathfinding.DijkstraPathFinder" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> DijkstraPathFinder </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - listeners : ArrayList&lt;WaypointListener&gt; </td></tr>
<tr><td align="left" balign="left"> # _count : int </td></tr>
<tr><td align="left" balign="left"> # _blocked : boolean </td></tr>
<tr><td align="left" balign="left"> - BIG : float </td></tr>
<tr><td align="left" balign="left"> # _candidate : ArrayList&lt;DijkstraPathFinder.Node&gt; </td></tr>
<tr><td align="left" balign="left"> # _reached : ArrayList&lt;DijkstraPathFinder.Node&gt; </td></tr>
<tr><td align="left" balign="left"> # _map : ArrayList&lt;Line&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + DijkstraPathFinder(map : LineMap) </td></tr>
<tr><td align="left" balign="left"> + findRoute(start : Pose, finish : Waypoint) : Path </td></tr>
<tr><td align="left" balign="left"> + findRoute(start : Pose, finish : Waypoint, theMap : LineMap) : Path </td></tr>
<tr><td align="left" balign="left"> - findPath(start : Point, finish : Point, theMap : ArrayList&lt;Line&gt;) : Path </td></tr>
<tr><td align="left" balign="left"> + setMap(theMap : ArrayList&lt;Line&gt;) </td></tr>
<tr><td align="left" balign="left"> + setMap(theMap : LineMap) </td></tr>
<tr><td align="left" balign="left"> + lengthenLines(delta : float) </td></tr>
<tr><td align="left" balign="left"> # initialize() </td></tr>
<tr><td align="left" balign="left"> # segmentBlocked(from : DijkstraPathFinder.Node, theDest : DijkstraPathFinder.Node) : boolean </td></tr>
<tr><td align="left" balign="left"> # getBest(currentDestination : DijkstraPathFinder.Node) : DijkstraPathFinder.Node </td></tr>
<tr><td align="left" balign="left"> # inReachedSet(aNode : DijkstraPathFinder.Node) : boolean </td></tr>
<tr><td align="left" balign="left"> # inCandidateSet(aNode : DijkstraPathFinder.Node) : boolean </td></tr>
<tr><td align="left" balign="left"> # getRoute(destination : DijkstraPathFinder.Node) : Path </td></tr>
<tr><td align="left" balign="left"> # getMap() : ArrayList&lt;Line&gt; </td></tr>
<tr><td align="left" balign="left"> + getIterationCount() : int </td></tr>
<tr><td align="left" balign="left"> + getNodeCount() : int </td></tr>
<tr><td align="left" balign="left"> + addListener(wpl : WaypointListener) </td></tr>
<tr><td align="left" balign="left"> + startPathFinding(start : Pose, end : Waypoint) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.pathfinding.DijkstraPathFinder.Node
	c46 [label=<<table title="lejos.robotics.pathfinding.DijkstraPathFinder.Node" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Node </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # _p : Point </td></tr>
<tr><td align="left" balign="left"> # _sourceDistance : float </td></tr>
<tr><td align="left" balign="left"> # _predecessor : DijkstraPathFinder.Node </td></tr>
<tr><td align="left" balign="left"> + _blocked : ArrayList&lt;DijkstraPathFinder.Node&gt; </td></tr>
<tr><td align="left" balign="left"> - BIG : float </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Node(p : Point) </td></tr>
<tr><td align="left" balign="left"> + Node(x : float, y : float) </td></tr>
<tr><td align="left" balign="left"> + atEndOfLine(theLine : Line) : boolean </td></tr>
<tr><td align="left" balign="left"> + setSourceDistance(theDistance : float) </td></tr>
<tr><td align="left" balign="left"> + getSourceDistance() : float </td></tr>
<tr><td align="left" balign="left"> + getDistance(aPoint : Point) : float </td></tr>
<tr><td align="left" balign="left"> + getLocation() : Point </td></tr>
<tr><td align="left" balign="left"> + block(aNode : DijkstraPathFinder.Node) </td></tr>
<tr><td align="left" balign="left"> + setPredecessor(thePredecessor : DijkstraPathFinder.Node) </td></tr>
<tr><td align="left" balign="left"> + getPredecessor() : DijkstraPathFinder.Node </td></tr>
<tr><td align="left" balign="left"> + getX() : float </td></tr>
<tr><td align="left" balign="left"> + getY() : float </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.pathfinding.FourWayGridMesh
	c47 [label=<<table title="lejos.robotics.pathfinding.FourWayGridMesh" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> FourWayGridMesh </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - mesh : ArrayList&lt;Node&gt; </td></tr>
<tr><td align="left" balign="left"> - map : LineMap </td></tr>
<tr><td align="left" balign="left"> - clearance : float </td></tr>
<tr><td align="left" balign="left"> - gridspace : float </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + FourWayGridMesh(map : LineMap, gridSpace : float, clearance : float) </td></tr>
<tr><td align="left" balign="left"> + getMesh() : Collection&lt;Node&gt; </td></tr>
<tr><td align="left" balign="left"> + setGridSpacing(gridSpace : float) </td></tr>
<tr><td align="left" balign="left"> + setClearance(clearance : float) </td></tr>
<tr><td align="left" balign="left"> + setMap(map : LineMap) </td></tr>
<tr><td align="left" balign="left"> + regenerate() </td></tr>
<tr><td align="left" balign="left"> + connect(node1 : Node, node2 : Node) : boolean </td></tr>
<tr><td align="left" balign="left"> + disconnect(node1 : Node, node2 : Node) : boolean </td></tr>
<tr><td align="left" balign="left"> + addNode(node : Node, neighbors : int) : int </td></tr>
<tr><td align="left" balign="left"> + removeNode(node : Node) : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.pathfinding.GridNode
	c48 [label=<<table title="lejos.robotics.pathfinding.GridNode" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> GridNode </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - grid_space : float </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + GridNode(x : float, y : float, grid_space : float) </td></tr>
<tr><td align="left" balign="left"> # calculateG(neighbor : Node) : float </td></tr>
<tr><td align="left" balign="left"> # calculateH(neighbor : Node) : float </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.pathfinding.NavigationMesh
	c49 [label=<<table title="lejos.robotics.pathfinding.NavigationMesh" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> NavigationMesh </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + addNode(node : Node, neighbors : int) : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + removeNode(node : Node) : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + connect(node1 : Node, node2 : Node) : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + disconnect(node1 : Node, node2 : Node) : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getMesh() : Collection&lt;Node&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + regenerate() </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.pathfinding.Node
	c50 [label=<<table title="lejos.robotics.pathfinding.Node" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Node </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ MULTIPLIER : int </td></tr>
<tr><td align="left" balign="left"> + x : float </td></tr>
<tr><td align="left" balign="left"> + y : float </td></tr>
<tr><td align="left" balign="left"> - g_score : float </td></tr>
<tr><td align="left" balign="left"> - h_score : float </td></tr>
<tr><td align="left" balign="left"> - cameFrom : Node </td></tr>
<tr><td align="left" balign="left"> - neighbors : ArrayList&lt;Node&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Node(x : float, y : float) </td></tr>
<tr><td align="left" balign="left"> + getNeighbors() : Collection&lt;Node&gt; </td></tr>
<tr><td align="left" balign="left"> + neighbors() : int </td></tr>
<tr><td align="left" balign="left"> + addNeighbor(neighbor : Node) : boolean </td></tr>
<tr><td align="left" balign="left"> + removeNeighbor(neighbor : Node) : boolean </td></tr>
<tr><td align="left" balign="left"> # setH_Score(h : float) </td></tr>
<tr><td align="left" balign="left"> # calculateG(neighbor : Node) : float </td></tr>
<tr><td align="left" balign="left"> # calculateH(goal : Node) : float </td></tr>
<tr><td align="left" balign="left"> # setG_Score(g : float) </td></tr>
<tr><td align="left" balign="left"> # getG_Score() : float </td></tr>
<tr><td align="left" balign="left"> # getF_Score() : float </td></tr>
<tr><td align="left" balign="left"> # getPredecessor() : Node </td></tr>
<tr><td align="left" balign="left"> # setPredecessor(orig : Node) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.pathfinding.NodePathFinder
	c51 [label=<<table title="lejos.robotics.pathfinding.NodePathFinder" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> NodePathFinder </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - listeners : ArrayList&lt;WaypointListener&gt; </td></tr>
<tr><td align="left" balign="left"> - alg : SearchAlgorithm </td></tr>
<tr><td align="left" balign="left"> - mesh : NavigationMesh </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - NodePathFinder(alg : SearchAlgorithm) </td></tr>
<tr><td align="left" balign="left"> + NodePathFinder(alg : SearchAlgorithm, mesh : NavigationMesh) </td></tr>
<tr><td align="left" balign="left"> + setNavMesh(mesh : NavigationMesh) </td></tr>
<tr><td align="left" balign="left"> + setSearchAlgorithm(alg : SearchAlgorithm) </td></tr>
<tr><td align="left" balign="left"> + addListener(wpl : WaypointListener) </td></tr>
<tr><td align="left" balign="left"> + findRoute(start : Pose, goal : Waypoint) : Path </td></tr>
<tr><td align="left" balign="left"> + startPathFinding(start : Pose, end : Waypoint) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.pathfinding.Path
	c52 [label=<<table title="lejos.robotics.pathfinding.Path" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Path </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Path() </td></tr>
<tr><td align="left" balign="left"> + dumpObject(dos : DataOutputStream) </td></tr>
<tr><td align="left" balign="left"> + loadObject(dis : DataInputStream) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.pathfinding.PathFinder
	c53 [label=<<table title="lejos.robotics.pathfinding.PathFinder" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> PathFinder </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + findRoute(start : Pose, destination : Waypoint) : Path </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + addListener(wpl : WaypointListener) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + startPathFinding(start : Pose, end : Waypoint) </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.pathfinding.RandomPathFinder
	c54 [label=<<table title="lejos.robotics.pathfinding.RandomPathFinder" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> RandomPathFinder </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
<tr><td align="left" balign="left"> - minGain : float </td></tr>
<tr><td align="left" balign="left"> - clearance : float </td></tr>
<tr><td align="left" balign="left"> - map : RangeMap </td></tr>
<tr><td align="left" balign="left"> - readings : RangeReadings </td></tr>
<tr><td align="left" balign="left"> - maxRange : float </td></tr>
<tr><td align="left" balign="left"> - maxDistance : float </td></tr>
<tr><td align="left" balign="left"> - maxIterations : int </td></tr>
<tr><td align="left" balign="left"> - listeners : ArrayList&lt;WaypointListener&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + RandomPathFinder(map : RangeMap, readings : RangeReadings) </td></tr>
<tr><td align="left" balign="left"> + setMaxRange(range : float) </td></tr>
<tr><td align="left" balign="left"> + setMaxDistance(distance : float) </td></tr>
<tr><td align="left" balign="left"> + setMaxIterations(iterations : int) </td></tr>
<tr><td align="left" balign="left"> + setClearance(clearance : float) </td></tr>
<tr><td align="left" balign="left"> + findRoute(start : Pose, destination : Waypoint) : Path </td></tr>
<tr><td align="left" balign="left"> - generatePose() : Pose </td></tr>
<tr><td align="left" balign="left"> + addListener(wpl : WaypointListener) </td></tr>
<tr><td align="left" balign="left"> + startPathFinding(start : Pose, end : Waypoint) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.pathfinding.RandomSelfGeneratingNode
	c55 [label=<<table title="lejos.robotics.pathfinding.RandomSelfGeneratingNode" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> RandomSelfGeneratingNode </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - firstCall : boolean </td></tr>
<tr><td align="left" balign="left"> - connections : int </td></tr>
<tr><td align="left" balign="left"> - maxDist : float </td></tr>
<tr><td align="left" balign="left"> - goal : Node </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + RandomSelfGeneratingNode(x : float, y : float, maxDist : float, connections : int) </td></tr>
<tr><td align="left" balign="left"> + RandomSelfGeneratingNode(x : float, y : float, maxDist : float, connections : int, goal : Node) </td></tr>
<tr><td align="left" balign="left"> + getNeighbors() : Collection&lt;Node&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.pathfinding.SearchAlgorithm
	c56 [label=<<table title="lejos.robotics.pathfinding.SearchAlgorithm" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> SearchAlgorithm </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + findPath(startNode : Node, goalNode : Node) : Path </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.pathfinding.ShortestPathFinder
	c57 [label=<<table title="lejos.robotics.pathfinding.ShortestPathFinder" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ShortestPathFinder </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - listeners : ArrayList&lt;WaypointListener&gt; </td></tr>
<tr><td align="left" balign="left"> - _count : int </td></tr>
<tr><td align="left" balign="left"> - BIG : float </td></tr>
<tr><td align="left" balign="left"> - _destination : ShortestPathFinder.Node </td></tr>
<tr><td align="left" balign="left"> - _source : ShortestPathFinder.Node </td></tr>
<tr><td align="left" balign="left"> - _candidate : ArrayList&lt;ShortestPathFinder.Node&gt; </td></tr>
<tr><td align="left" balign="left"> - _reached : ArrayList&lt;ShortestPathFinder.Node&gt; </td></tr>
<tr><td align="left" balign="left"> - _map : ArrayList&lt;Line&gt; </td></tr>
<tr><td align="left" balign="left"> - _debug : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ShortestPathFinder(map : LineMap) </td></tr>
<tr><td align="left" balign="left"> + findRoute(start : Pose, finish : Waypoint) : Path </td></tr>
<tr><td align="left" balign="left"> + findRoute(start : Pose, finish : Waypoint, theMap : LineMap) : Path </td></tr>
<tr><td align="left" balign="left"> - findPath(start : Point, finish : Point, theMap : ArrayList&lt;Line&gt;) : Path </td></tr>
<tr><td align="left" balign="left"> - segmentBlocked(from : ShortestPathFinder.Node, theDest : ShortestPathFinder.Node) : boolean </td></tr>
<tr><td align="left" balign="left"> - inReachedSet(aNode : ShortestPathFinder.Node) : boolean </td></tr>
<tr><td align="left" balign="left"> + inCandidateSet(aNode : ShortestPathFinder.Node) : boolean </td></tr>
<tr><td align="left" balign="left"> - getRoute(destination : ShortestPathFinder.Node) : Path </td></tr>
<tr><td align="left" balign="left"> + setMap(theMap : ArrayList&lt;Line&gt;) </td></tr>
<tr><td align="left" balign="left"> + setMap(theMap : LineMap) </td></tr>
<tr><td align="left" balign="left"> + setDebug(yes : boolean) </td></tr>
<tr><td align="left" balign="left"> + lengthenLines(delta : float) </td></tr>
<tr><td align="left" balign="left"> - initialize() </td></tr>
<tr><td align="left" balign="left"> + getMap() : ArrayList&lt;Line&gt; </td></tr>
<tr><td align="left" balign="left"> + getIterationCount() : int </td></tr>
<tr><td align="left" balign="left"> + getNodeCount() : int </td></tr>
<tr><td align="left" balign="left"> + addListener(wpl : WaypointListener) </td></tr>
<tr><td align="left" balign="left"> + startPathFinding(start : Pose, end : Waypoint) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.pathfinding.ShortestPathFinder.Node
	c58 [label=<<table title="lejos.robotics.pathfinding.ShortestPathFinder.Node" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Node </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _p : Point </td></tr>
<tr><td align="left" balign="left"> - _sourceDistance : float </td></tr>
<tr><td align="left" balign="left"> - _predecessor : ShortestPathFinder.Node </td></tr>
<tr><td align="left" balign="left"> + _blocked : ArrayList&lt;ShortestPathFinder.Node&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Node(p : Point) </td></tr>
<tr><td align="left" balign="left"> - Node(x : float, y : float) </td></tr>
<tr><td align="left" balign="left"> - atEndOfLine(theLine : Line) : boolean </td></tr>
<tr><td align="left" balign="left"> - setSourceDistance(theDistance : float) </td></tr>
<tr><td align="left" balign="left"> - getSourceDistance() : float </td></tr>
<tr><td align="left" balign="left"> - getDistance(aPoint : Point) : float </td></tr>
<tr><td align="left" balign="left"> - getLocation() : Point </td></tr>
<tr><td align="left" balign="left"> - block(aNode : ShortestPathFinder.Node) </td></tr>
<tr><td align="left" balign="left"> - setPredecessor(thePredecessor : ShortestPathFinder.Node) </td></tr>
<tr><td align="left" balign="left"> - getPredecessor() : ShortestPathFinder.Node </td></tr>
<tr><td align="left" balign="left"> - getX() : float </td></tr>
<tr><td align="left" balign="left"> - getY() : float </td></tr>
<tr><td align="left" balign="left"> + equals(n : ShortestPathFinder.Node) : boolean </td></tr>
<tr><td align="left" balign="left"> + isBlocked(aNode : ShortestPathFinder.Node) : boolean </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//lejos.robotics.localization.BeaconPoseProvider implements lejos.robotics.localization.PoseProvider
	c9:p -> c1:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.robotics.localization.BeaconPoseProvider implements lejos.robotics.navigation.MoveListener
	c25:p -> c1:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.robotics.localization.CompassPoseProvider extends lejos.robotics.localization.OdometryPoseProvider
	c8:p -> c3:p [dir=back,arrowtail=empty];
	//lejos.robotics.localization.MCLPoseProvider implements lejos.robotics.localization.PoseProvider
	c9:p -> c6:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.robotics.localization.MCLPoseProvider implements lejos.robotics.navigation.MoveListener
	c25:p -> c6:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.robotics.localization.MCLPoseProvider.Updater extends java.lang.Thread
	c59:p -> c7:p [dir=back,arrowtail=empty];
	//lejos.robotics.localization.OdometryPoseProvider implements lejos.robotics.localization.PoseProvider
	c9:p -> c8:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.robotics.localization.OdometryPoseProvider implements lejos.robotics.navigation.MoveListener
	c25:p -> c8:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.robotics.mapping.LineMap implements lejos.robotics.mapping.RangeMap
	c12:p -> c10:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.robotics.navigation.ArcMoveController implements lejos.robotics.navigation.MoveController
	c24:p -> c16:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.robotics.navigation.ArcRotateMoveController implements lejos.robotics.navigation.ArcMoveController
	c16:p -> c17:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.robotics.navigation.ArcRotateMoveController implements lejos.robotics.navigation.RotateMoveController
	c31:p -> c17:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.robotics.navigation.DestinationUnreachableException extends java.lang.Exception
	c60:p -> c18:p [dir=back,arrowtail=empty];
	//lejos.robotics.navigation.DifferentialPilot implements lejos.robotics.navigation.LineFollowingMoveController
	c21:p -> c19:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.robotics.navigation.DifferentialPilot.Monitor extends java.lang.Thread
	c59:p -> c20:p [dir=back,arrowtail=empty];
	//lejos.robotics.navigation.LineFollowingMoveController implements lejos.robotics.navigation.ArcRotateMoveController
	c17:p -> c21:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.robotics.navigation.MoveController implements lejos.robotics.navigation.MoveProvider
	c26:p -> c24:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.robotics.navigation.Navigator implements lejos.robotics.navigation.WaypointListener
	c33:p -> c28:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.robotics.navigation.Navigator.Nav extends java.lang.Thread
	c59:p -> c29:p [dir=back,arrowtail=empty];
	//lejos.robotics.navigation.RotateMoveController implements lejos.robotics.navigation.MoveController
	c24:p -> c31:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.robotics.navigation.Waypoint extends Point
	c61:p -> c32:p [dir=back,arrowtail=empty];
	//lejos.robotics.objectdetection.FeatureDetectorAdapter implements lejos.robotics.objectdetection.FeatureDetector
	c35:p -> c36:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.robotics.objectdetection.FeatureDetectorAdapter.MonitorThread extends java.lang.Thread
	c59:p -> c37:p [dir=back,arrowtail=empty];
	//lejos.robotics.objectdetection.FusorDetector implements lejos.robotics.objectdetection.FeatureDetector
	c35:p -> c39:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.robotics.objectdetection.FusorDetector implements lejos.robotics.objectdetection.FeatureListener
	c38:p -> c39:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.robotics.objectdetection.FusorDetector.NotifyThread extends java.lang.Thread
	c59:p -> c40:p [dir=back,arrowtail=empty];
	//lejos.robotics.objectdetection.RangeFeature implements lejos.robotics.objectdetection.Feature
	c34:p -> c41:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.robotics.objectdetection.RangeFeatureDetector extends lejos.robotics.objectdetection.FeatureDetectorAdapter
	c36:p -> c42:p [dir=back,arrowtail=empty];
	//lejos.robotics.objectdetection.TouchFeatureDetector extends lejos.robotics.objectdetection.FeatureDetectorAdapter
	c36:p -> c43:p [dir=back,arrowtail=empty];
	//lejos.robotics.pathfinding.AstarSearchAlgorithm implements lejos.robotics.pathfinding.SearchAlgorithm
	c56:p -> c44:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.robotics.pathfinding.DijkstraPathFinder implements lejos.robotics.pathfinding.PathFinder
	c53:p -> c45:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.robotics.pathfinding.FourWayGridMesh implements lejos.robotics.pathfinding.NavigationMesh
	c49:p -> c47:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.robotics.pathfinding.GridNode extends lejos.robotics.pathfinding.Node
	c50:p -> c48:p [dir=back,arrowtail=empty];
	//lejos.robotics.pathfinding.NodePathFinder implements lejos.robotics.pathfinding.PathFinder
	c53:p -> c51:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.robotics.pathfinding.Path extends java.util.ArrayList<lejos.robotics.navigation.Waypoint>
	c62:p -> c52:p [dir=back,arrowtail=empty];
	//lejos.robotics.pathfinding.RandomPathFinder implements lejos.robotics.pathfinding.PathFinder
	c53:p -> c54:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.robotics.pathfinding.RandomSelfGeneratingNode extends lejos.robotics.pathfinding.Node
	c50:p -> c55:p [dir=back,arrowtail=empty];
	//lejos.robotics.pathfinding.ShortestPathFinder implements lejos.robotics.pathfinding.PathFinder
	c53:p -> c57:p [dir=back,arrowtail=empty,style=dashed];
	// java.lang.Thread
	c59 [label=<<table title="java.lang.Thread" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/java/lang/Thread.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Thread </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - name : String </td></tr>
<tr><td align="left" balign="left"> - priority : int </td></tr>
<tr><td align="left" balign="left"> - threadQ : Thread </td></tr>
<tr><td align="left" balign="left"> - eetop : long </td></tr>
<tr><td align="left" balign="left"> - single_step : boolean </td></tr>
<tr><td align="left" balign="left"> - daemon : boolean </td></tr>
<tr><td align="left" balign="left"> - stillborn : boolean </td></tr>
<tr><td align="left" balign="left"> - target : Runnable </td></tr>
<tr><td align="left" balign="left"> - group : ThreadGroup </td></tr>
<tr><td align="left" balign="left"> - contextClassLoader : ClassLoader </td></tr>
<tr><td align="left" balign="left"> - inheritedAccessControlContext : AccessControlContext </td></tr>
<tr><td align="left" balign="left"> - threadInitNumber : int </td></tr>
<tr><td align="left" balign="left"> ~ threadLocals : ThreadLocal.ThreadLocalMap </td></tr>
<tr><td align="left" balign="left"> ~ inheritableThreadLocals : ThreadLocal.ThreadLocalMap </td></tr>
<tr><td align="left" balign="left"> - stackSize : long </td></tr>
<tr><td align="left" balign="left"> - nativeParkEventPointer : long </td></tr>
<tr><td align="left" balign="left"> - tid : long </td></tr>
<tr><td align="left" balign="left"> - threadSeqNumber : long </td></tr>
<tr><td align="left" balign="left"> - threadStatus : int </td></tr>
<tr><td align="left" balign="left"> ~ parkBlocker : Object </td></tr>
<tr><td align="left" balign="left"> - blocker : Interruptible </td></tr>
<tr><td align="left" balign="left"> - blockerLock : Object </td></tr>
<tr><td align="left" balign="left"> + MIN_PRIORITY : int </td></tr>
<tr><td align="left" balign="left"> + NORM_PRIORITY : int </td></tr>
<tr><td align="left" balign="left"> + MAX_PRIORITY : int </td></tr>
<tr><td align="left" balign="left"> - EMPTY_STACK_TRACE : StackTraceElement[] </td></tr>
<tr><td align="left" balign="left"> - SUBCLASS_IMPLEMENTATION_PERMISSION : RuntimePermission </td></tr>
<tr><td align="left" balign="left"> - uncaughtExceptionHandler : Thread.UncaughtExceptionHandler </td></tr>
<tr><td align="left" balign="left"> - defaultUncaughtExceptionHandler : Thread.UncaughtExceptionHandler </td></tr>
<tr><td align="left" balign="left"> ~ threadLocalRandomSeed : long </td></tr>
<tr><td align="left" balign="left"> ~ threadLocalRandomProbe : int </td></tr>
<tr><td align="left" balign="left"> ~ threadLocalRandomSecondarySeed : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Thread() </td></tr>
<tr><td align="left" balign="left"> + Thread(arg0 : Runnable) </td></tr>
<tr><td align="left" balign="left"> ~ Thread(arg0 : Runnable, arg1 : AccessControlContext) </td></tr>
<tr><td align="left" balign="left"> + Thread(arg0 : ThreadGroup, arg1 : Runnable) </td></tr>
<tr><td align="left" balign="left"> + Thread(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + Thread(arg0 : ThreadGroup, arg1 : String) </td></tr>
<tr><td align="left" balign="left"> + Thread(arg0 : Runnable, arg1 : String) </td></tr>
<tr><td align="left" balign="left"> + Thread(arg0 : ThreadGroup, arg1 : Runnable, arg2 : String) </td></tr>
<tr><td align="left" balign="left"> + Thread(arg0 : ThreadGroup, arg1 : Runnable, arg2 : String, arg3 : long) </td></tr>
<tr><td align="left" balign="left"> + Thread(arg0 : ThreadGroup, arg1 : Runnable, arg2 : String, arg3 : long, arg4 : boolean) </td></tr>
<tr><td align="left" balign="left"> - registerNatives() </td></tr>
<tr><td align="left" balign="left"> - nextThreadNum() : int </td></tr>
<tr><td align="left" balign="left"> - nextThreadID() : long </td></tr>
<tr><td align="left" balign="left"> ~ blockedOn(arg0 : Interruptible) </td></tr>
<tr><td align="left" balign="left"> + currentThread() : Thread </td></tr>
<tr><td align="left" balign="left"> + yield() </td></tr>
<tr><td align="left" balign="left"> + sleep(arg0 : long) </td></tr>
<tr><td align="left" balign="left"> + sleep(arg0 : long, arg1 : int) </td></tr>
<tr><td align="left" balign="left"> + onSpinWait() </td></tr>
<tr><td align="left" balign="left"> - init(arg0 : ThreadGroup, arg1 : Runnable, arg2 : String, arg3 : long) </td></tr>
<tr><td align="left" balign="left"> - init(arg0 : ThreadGroup, arg1 : Runnable, arg2 : String, arg3 : long, arg4 : AccessControlContext, arg5 : boolean) </td></tr>
<tr><td align="left" balign="left"> # clone() : Object </td></tr>
<tr><td align="left" balign="left"> + start() </td></tr>
<tr><td align="left" balign="left"> - start0() </td></tr>
<tr><td align="left" balign="left"> + run() </td></tr>
<tr><td align="left" balign="left"> - exit() </td></tr>
<tr><td align="left" balign="left"> + stop() </td></tr>
<tr><td align="left" balign="left"> + stop(arg0 : Throwable) </td></tr>
<tr><td align="left" balign="left"> + interrupt() </td></tr>
<tr><td align="left" balign="left"> + interrupted() : boolean </td></tr>
<tr><td align="left" balign="left"> + isInterrupted() : boolean </td></tr>
<tr><td align="left" balign="left"> - isInterrupted(arg0 : boolean) : boolean </td></tr>
<tr><td align="left" balign="left"> + destroy() </td></tr>
<tr><td align="left" balign="left"> + isAlive() : boolean </td></tr>
<tr><td align="left" balign="left"> + suspend() </td></tr>
<tr><td align="left" balign="left"> + resume() </td></tr>
<tr><td align="left" balign="left"> + setPriority(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> + getPriority() : int </td></tr>
<tr><td align="left" balign="left"> + setName(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + getName() : String </td></tr>
<tr><td align="left" balign="left"> + getThreadGroup() : ThreadGroup </td></tr>
<tr><td align="left" balign="left"> + activeCount() : int </td></tr>
<tr><td align="left" balign="left"> + enumerate(arg0 : Thread[]) : int </td></tr>
<tr><td align="left" balign="left"> + countStackFrames() : int </td></tr>
<tr><td align="left" balign="left"> + join(arg0 : long) </td></tr>
<tr><td align="left" balign="left"> + join(arg0 : long, arg1 : int) </td></tr>
<tr><td align="left" balign="left"> + join() </td></tr>
<tr><td align="left" balign="left"> + dumpStack() </td></tr>
<tr><td align="left" balign="left"> + setDaemon(arg0 : boolean) </td></tr>
<tr><td align="left" balign="left"> + isDaemon() : boolean </td></tr>
<tr><td align="left" balign="left"> + checkAccess() </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + getContextClassLoader() : ClassLoader </td></tr>
<tr><td align="left" balign="left"> + setContextClassLoader(arg0 : ClassLoader) </td></tr>
<tr><td align="left" balign="left"> + holdsLock(arg0 : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + getStackTrace() : StackTraceElement[] </td></tr>
<tr><td align="left" balign="left"> + getAllStackTraces() : Map&lt;Thread, StackTraceElement&gt; </td></tr>
<tr><td align="left" balign="left"> - isCCLOverridden(arg0 : Class&lt;?&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> - auditSubclass(arg0 : Class&lt;?&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> - dumpThreads(arg0 : Thread[]) : StackTraceElement[][] </td></tr>
<tr><td align="left" balign="left"> - getThreads() : Thread[] </td></tr>
<tr><td align="left" balign="left"> + getId() : long </td></tr>
<tr><td align="left" balign="left"> + getState() : Thread.State </td></tr>
<tr><td align="left" balign="left"> + setDefaultUncaughtExceptionHandler(arg0 : Thread.UncaughtExceptionHandler) </td></tr>
<tr><td align="left" balign="left"> + getDefaultUncaughtExceptionHandler() : Thread.UncaughtExceptionHandler </td></tr>
<tr><td align="left" balign="left"> + getUncaughtExceptionHandler() : Thread.UncaughtExceptionHandler </td></tr>
<tr><td align="left" balign="left"> + setUncaughtExceptionHandler(arg0 : Thread.UncaughtExceptionHandler) </td></tr>
<tr><td align="left" balign="left"> - dispatchUncaughtException(arg0 : Throwable) </td></tr>
<tr><td align="left" balign="left"> ~ processQueue(arg0 : ReferenceQueue&lt;Class&lt;?&gt;&gt;, arg1 : ConcurrentMap&lt;?, ?&gt;) </td></tr>
<tr><td align="left" balign="left"> - setPriority0(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> - stop0(arg0 : Object) </td></tr>
<tr><td align="left" balign="left"> - suspend0() </td></tr>
<tr><td align="left" balign="left"> - resume0() </td></tr>
<tr><td align="left" balign="left"> - interrupt0() </td></tr>
<tr><td align="left" balign="left"> - setNativeName(arg0 : String) </td></tr>
		</table></td></tr>
		</table>>, URL="http://java.sun.com/j2se/1.4.2/docs/api/java/lang/Thread.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// java.lang.Exception
	c60 [label=<<table title="java.lang.Exception" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/java/lang/Exception.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Exception </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ serialVersionUID : long </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Exception() </td></tr>
<tr><td align="left" balign="left"> + Exception(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + Exception(arg0 : String, arg1 : Throwable) </td></tr>
<tr><td align="left" balign="left"> + Exception(arg0 : Throwable) </td></tr>
<tr><td align="left" balign="left"> # Exception(arg0 : String, arg1 : Throwable, arg2 : boolean, arg3 : boolean) </td></tr>
		</table></td></tr>
		</table>>, URL="http://java.sun.com/j2se/1.4.2/docs/api/java/lang/Exception.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// java.util.ArrayList<E>
	c62 [label=<<table title="java.util.ArrayList" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/java/util/ArrayList.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ArrayList&lt;E&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
<tr><td align="left" balign="left"> - DEFAULT_CAPACITY : int </td></tr>
<tr><td align="left" balign="left"> - EMPTY_ELEMENTDATA : Object[] </td></tr>
<tr><td align="left" balign="left"> - DEFAULTCAPACITY_EMPTY_ELEMENTDATA : Object[] </td></tr>
<tr><td align="left" balign="left"> ~ elementData : Object[] </td></tr>
<tr><td align="left" balign="left"> - size : int </td></tr>
<tr><td align="left" balign="left"> - MAX_ARRAY_SIZE : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ArrayList(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> + ArrayList() </td></tr>
<tr><td align="left" balign="left"> + ArrayList(arg0 : Collection&lt;?&gt;) </td></tr>
<tr><td align="left" balign="left"> + trimToSize() </td></tr>
<tr><td align="left" balign="left"> + ensureCapacity(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> - grow(arg0 : int) : Object[] </td></tr>
<tr><td align="left" balign="left"> - grow() : Object[] </td></tr>
<tr><td align="left" balign="left"> - newCapacity(arg0 : int) : int </td></tr>
<tr><td align="left" balign="left"> - hugeCapacity(arg0 : int) : int </td></tr>
<tr><td align="left" balign="left"> + size() : int </td></tr>
<tr><td align="left" balign="left"> + isEmpty() : boolean </td></tr>
<tr><td align="left" balign="left"> + contains(arg0 : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + indexOf(arg0 : Object) : int </td></tr>
<tr><td align="left" balign="left"> + lastIndexOf(arg0 : Object) : int </td></tr>
<tr><td align="left" balign="left"> + clone() : Object </td></tr>
<tr><td align="left" balign="left"> + toArray() : Object[] </td></tr>
<tr><td align="left" balign="left"> + toArray(arg0 : T[]) : T[] </td></tr>
<tr><td align="left" balign="left"> ~ elementData(arg0 : int) : E </td></tr>
<tr><td align="left" balign="left"> ~ elementAt(arg0 : Object[], arg1 : int) : E </td></tr>
<tr><td align="left" balign="left"> + get(arg0 : int) : E </td></tr>
<tr><td align="left" balign="left"> + set(arg0 : int, arg1 : E) : E </td></tr>
<tr><td align="left" balign="left"> - add(arg0 : E, arg1 : Object[], arg2 : int) </td></tr>
<tr><td align="left" balign="left"> + add(arg0 : E) : boolean </td></tr>
<tr><td align="left" balign="left"> + add(arg0 : int, arg1 : E) </td></tr>
<tr><td align="left" balign="left"> + remove(arg0 : int) : E </td></tr>
<tr><td align="left" balign="left"> + remove(arg0 : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> - fastRemove(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> + clear() </td></tr>
<tr><td align="left" balign="left"> + addAll(arg0 : Collection&lt;?&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + addAll(arg0 : int, arg1 : Collection&lt;?&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> # removeRange(arg0 : int, arg1 : int) </td></tr>
<tr><td align="left" balign="left"> - shiftTailOverGap(arg0 : Object[], arg1 : int, arg2 : int) </td></tr>
<tr><td align="left" balign="left"> - rangeCheckForAdd(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> - outOfBoundsMsg(arg0 : int) : String </td></tr>
<tr><td align="left" balign="left"> - outOfBoundsMsg(arg0 : int, arg1 : int) : String </td></tr>
<tr><td align="left" balign="left"> + removeAll(arg0 : Collection&lt;?&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + retainAll(arg0 : Collection&lt;?&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> ~ batchRemove(arg0 : Collection&lt;?&gt;, arg1 : boolean, arg2 : int, arg3 : int) : boolean </td></tr>
<tr><td align="left" balign="left"> - writeObject(arg0 : ObjectOutputStream) </td></tr>
<tr><td align="left" balign="left"> - readObject(arg0 : ObjectInputStream) </td></tr>
<tr><td align="left" balign="left"> + listIterator(arg0 : int) : ListIterator&lt;E&gt; </td></tr>
<tr><td align="left" balign="left"> + listIterator() : ListIterator&lt;E&gt; </td></tr>
<tr><td align="left" balign="left"> + iterator() : Iterator&lt;E&gt; </td></tr>
<tr><td align="left" balign="left"> + subList(arg0 : int, arg1 : int) : List&lt;E&gt; </td></tr>
<tr><td align="left" balign="left"> + forEach(arg0 : Consumer&lt;?&gt;) </td></tr>
<tr><td align="left" balign="left"> + spliterator() : Spliterator&lt;E&gt; </td></tr>
<tr><td align="left" balign="left"> - nBits(arg0 : int) : long[] </td></tr>
<tr><td align="left" balign="left"> - setBit(arg0 : long[], arg1 : int) </td></tr>
<tr><td align="left" balign="left"> - isClear(arg0 : long[], arg1 : int) : boolean </td></tr>
<tr><td align="left" balign="left"> + removeIf(arg0 : Predicate&lt;?&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> ~ removeIf(arg0 : Predicate&lt;?&gt;, arg1 : int, arg2 : int) : boolean </td></tr>
<tr><td align="left" balign="left"> + replaceAll(arg0 : UnaryOperator&lt;E&gt;) </td></tr>
<tr><td align="left" balign="left"> + sort(arg0 : Comparator&lt;?&gt;) </td></tr>
<tr><td align="left" balign="left"> ~ checkInvariants() </td></tr>
		</table></td></tr>
		</table>>, URL="http://java.sun.com/j2se/1.4.2/docs/api/java/util/ArrayList.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// Point
	c61[label=<<table title="Point" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api//Point.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Point </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
}

